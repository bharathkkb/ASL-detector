swagger: "2.0"
info:
  description: ASL Detection REST API
  version: "1.0.0"
  title: ASL Detection REST API
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "{{is_testing}}/api"
paths:
  /predict:
    post:
      summary: kicks off prediction job for given image
      operationId: apiHandler.predict_image_endpoint
      tags:
        - "prediction"
      description: |
        Returns a job UUID
      consumes:
         - multipart/form-data
      parameters:
         - name: file_to_upload
           in: formData
           description: The image to be uploaded
           type: file
           required: true
      produces:
      - application/json
      responses:
        200:
          description: prediction obj
          schema:
            type: object
            items:
              type: object
              $ref: '#/definitions/jobid'
        400:
          description: bad input parameter
  /crop:
    post:
      summary: trys to crop image to find hand
      operationId: apiHandler.create_crop_img
      tags:
        - "crop"
      description: |
        Returns cropped image
      consumes:
         - multipart/form-data
      parameters:
         - name: file_to_upload
           in: formData
           description: The image to be uploaded
           type: file
           required: true
      produces:
      - application/json
      responses:
        200:
          description: cropped image
          schema:
            type: object
        400:
          description: bad input parameter
  /job:
    post:
      summary: returns current prediction job status
      operationId: apiHandler.get_job
      tags:
        - "prediction"
      description: |
        returns current prediction job status
      consumes:
         - multipart/form-data
      parameters:
         - name: id
           in: formData
           description: job id
           type: string
           required: true
      produces:
      - application/json
      responses:
        200:
          description: prediction obj
          schema:
            type: object
            items:
              type: object
              $ref: '#/definitions/prediction'
        400:
          description: bad input parameter
  /hello:
    get:
      summary: returns hello
      operationId: helloClass.testHello
      tags:
        - "helloClass"
      description: |
        Returns a simple hello
      produces:
      - application/json
      responses:
        200:
          description: hello obj
          schema:
            type: object
            items:
              type: object
              $ref: '#/definitions/hello'
        400:
          description: bad input parameter
definitions:
  jobid:
    type: object
    properties:
      id:
        type: string
        example: 123
  prediction:
    type: object
    properties:
      prediction:
        type: string
        example: A
  hello:
    type: object
    properties:
      hello:
        type: string
        example: hello-string
